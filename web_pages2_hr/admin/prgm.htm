<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>ERM2024</title>
    <link
      href="/bootstrap/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <script src="/elak.js" type="text/javascript"></script>
  </head>
  <body style="background-color: rgb(141, 141, 141)">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-sm navbar-dark bg-dark fs-3">
      <div class="container">
        <a class="navbar-brand" href="http://www.elak.hr/">
          <img src="/elak_zlatni.png" width="130" height="80" alt="ELAK" />
        </a>
        <button
          class="navbar-toggler d-lg-none"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#collapsibleNavId"
          aria-controls="collapsibleNavId"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="collapsibleNavId">
          <ul class="navbar-nav me-auto mt-2 mt-lg-0">
            <li class="nav-item">
              <a class="nav-link" href="/index.htm">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/sat.htm">Time</a>
            </li>
            <li class="nav-item">
              <a
                class="nav-link active"
                href="/admin/prgm.htm"
                aria-current="page"
                >Program <span class="visually-hidden">(current)</span></a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/upr.htm">Control</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/config.htm">Network</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/admin/ntp.htm">Sync</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="container" id="content">
      <div id="main" class="p-3" style="background-color: dimgray">
        <h1
          class="text-light text-center border border-3 border-danger rounded-3 mt-2 pb-1"
        >
          Program control
        </h1>
        <!-- Upper Buttons -->
        <div
          class="d-flex justify-content-between align-items-center border border-3 border-danger rounded-3 p-2 mb-2"
        >
          <div>
            <button class="btn btn-danger m-1" id="ucitajEMC">
              Load from Device
            </button>
            <button class="btn btn-danger m-1" id="SpremiEMC">
              Save to Device
            </button>
            <button class="btn btn-danger m-1" id="otkaz">Cancel</button>
          </div>
          <div>
            <span class="badge bg-danger m-3" id="memorijaPop"
              >Memory: 000/800</span
            >
            <span class="badge bg-danger" id="ucitavanje"
              >Loading: 000 of 000</span
            >
          </div>
          <button class="btn btn-danger" id="brisiSve">Clear all</button>
        </div>

        <!-- Box Grid -->
        <div class="row">
          <!-- Vremenska Lista Section -->
          <div class="col-lg-5 mb-3 mt-1">
            <div class="p-3 border rounded border-danger bg-secondary border-3">
              <h5 class="text-center text-light">Week program</h5>

              <!-- Program Selection -->
              <div
                class="d-flex align-items-center justify-content-center mb-3"
              >
                <label for="tjedniProgramSelect" class="me-3 text-light"
                  >Program:</label
                >
                <select
                  id="tjedniProgramSelect"
                  class="form-select w-auto me-2"
                ></select>
                <button class="btn btn-danger me-2" id="buttUp">+</button>
                <button class="btn btn-danger" id="buttDown">-</button>
              </div>

              <!-- Time and Duration -->
              <div class="row mb-3 text-center">
                <div class="col">
                  <label for="vrijemeUklopa" class="form-label text-light"
                    >Time:</label
                  >
                  <input
                    type="time"
                    id="vrijemeUklopa"
                    value="00:00"
                    class="form-control text-center"
                  />
                </div>
                <div class="col">
                  <label for="uklopGroup" class="form-label text-light"
                    >Ring duration:</label
                  >

                  <div class="input-group" id="uklopGroup">
                    <span
                      class="input-group-text bg-danger text-bg-danger"
                      id="offOn"
                      >OFF</span
                    >
                    <input
                      type="number"
                      id="trajanjeUklopa"
                      class="form-control text-center"
                      value="0"
                      min="0"
                      max="100"
                    />
                    <span class="input-group-text bg-secondary text-bg-dark"
                      >S</span
                    >
                  </div>
                </div>
              </div>

              <!-- Range Sliders -->
              <div class="row mb-3 text-center">
                <div class="col">
                  <label for="vrijemeSati" class="form-label text-light"
                    >Hours:</label
                  >
                  <input
                    type="range"
                    id="vrijemeSati"
                    class="form-range"
                    value="0"
                    min="0"
                    max="23"
                    step="1"
                  />
                </div>
                <div class="col">
                  <label for="vrijemeMinute" class="form-label text-light"
                    >Minutes:</label
                  >
                  <input
                    type="range"
                    id="vrijemeMinute"
                    class="form-range"
                    min="0"
                    value="0"
                    max="59"
                    step="1"
                  />
                </div>
                <div class="col">
                  <label for="sliderUklop" class="form-label text-light"
                    >Duration:</label
                  >
                  <input
                    type="range"
                    id="sliderUklop"
                    class="form-range"
                    value="0"
                    min="0"
                    max="100"
                    step="1"
                  />
                </div>
              </div>

              <!-- Checkbox for All Days -->
              <div class="text-center mb-3">
                <input type="checkbox" id="sviDani" class="form-check-input" />
                <label for="sviDani" class="form-check-label text-light"
                  >All days</label
                >
              </div>

              <!-- Days of the Week -->
              <div class="d-flex justify-content-around mb-3">
                <div>
                  <input
                    type="checkbox"
                    id="pon"
                    class="form-check-input"
                  /><label for="pon" class="ms-1 text-light">Mon</label>
                </div>
                <div>
                  <input
                    type="checkbox"
                    id="uto"
                    class="form-check-input"
                  /><label for="uto" class="ms-1 text-light">Tue</label>
                </div>
                <div>
                  <input
                    type="checkbox"
                    id="sri"
                    class="form-check-input"
                  /><label for="sri" class="ms-1 text-light">Wed</label>
                </div>
                <div>
                  <input
                    type="checkbox"
                    id="cet"
                    class="form-check-input"
                  /><label for="cet" class="ms-1 text-light">Thu</label>
                </div>
                <div>
                  <input
                    type="checkbox"
                    id="pet"
                    class="form-check-input"
                  /><label for="pet" class="ms-1 text-light">Fri</label>
                </div>
                <div>
                  <input
                    type="checkbox"
                    id="sub"
                    class="form-check-input"
                  /><label for="sub" class="ms-1 text-light">Sat</label>
                </div>
                <div>
                  <input
                    type="checkbox"
                    id="ned"
                    class="form-check-input"
                  /><label for="ned" class="ms-1 text-light">Sun</label>
                </div>
              </div>

              <!-- Add to List Button -->
              <div class="text-center mb-3">
                <button class="btn btn-danger" id="dodajVremListu">
                  Add to schedule
                </button>
              </div>

              <!-- Time List Header -->
              <h6 class="text-light">Schedule:</h6>
              <div class="text-muted row small mb-2">
                <span class="col-3 text-light">Time</span>
                <span class="col-4 text-light">Weekday</span>
                <span class="col-2 text-light">Duration</span>
                <span class="col-2 text-light col-md-3 ms-2 ms-md-0"
                  >Modify/delete</span
                >
              </div>

              <!-- Time List -->
              <div
                id="vremenskaLista"
                class="border border-danger p-1 rounded text-bg-dark"
                style="
                  height: 310px;

                  overflow-y: scroll;
                  overflow-x: hidden;
                  font-size: medium;
                "
              >
                <!-- Items will be dynamically added here -->
              </div>
            </div>
          </div>

          <!-- Godišnja Lista -->
          <div class="col-lg-4 mb-3 mt-1">
            <div class="p-3 border border-danger border-3 rounded bg-secondary">
              <h5 class="text-center text-light">Output programs</h5>
              <div class="mb-3">
                <label for="releji" class="form-label text-light"
                  >Output select:</label
                >
                <select id="releji" class="form-select">
                  <option value="0">R1-R6</option>
                  <option value="241">R1</option>
                  <option value="242">R2</option>
                  <option value="243">R3</option>
                  <option value="244">R4</option>
                  <option value="245">R5</option>
                  <option value="246">R6</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="dateChoosen" class="form-label text-light"
                  >Start date:</label
                >
                <input
                  type="date"
                  id="dateChoosen"
                  class="form-control"
                  min="2020-01-01"
                  value="2020-01-01"
                />
              </div>
              <div class="mb-3">
                <label for="programGodisnja" class="form-label text-light"
                  >Week program:</label
                >
                <select
                  id="programGodisnja"
                  class="form-select w-auto"
                ></select>
              </div>
              <div class="d-grid gap-2">
                <button class="btn btn-danger" id="dodajGodListu">
                  Add output program
                </button>
              </div>
              <h6 class="mt-3 text-light">Output programs:</h6>
              <div class="d-flex justify-content-between text-muted small mb-2">
                <span class="col-2 text-light">Output</span>
                <span class="col-3 text-light">Start date</span>
                <span class="col-2 text-light">Program</span>
                <span class="col-3 text-light">Modify/delete</span>
              </div>
              <div
                id="godiListaPrikaz"
                class="border border-danger rounded p-2 text-bg-dark"
                style="
                  height: 348px;

                  overflow-y: scroll;
                "
              ></div>
            </div>
          </div>

          <!-- Tekstualni Program -->
          <div class="col-lg-3 mb-3 mt-1">
            <div class="p-3 border border-3 border-danger rounded bg-secondary">
              <h5 class="text-center text-light">Text program</h5>
              <textarea
                class="form-control text-bg-dark"
                id="tekstProgram"
                rows="27"
                style="overflow-y: scroll; resize: none"
              ></textarea>
              <button class="btn btn-danger mt-3 w-100" id="ucitajIzTeksta">
                Load from text
              </button>
            </div>
          </div>
        </div>

        <!-- Footer -->
        <div
          class="text-center text-light mt-1 pt-2 border border-3 border-danger rounded-3"
        >
          <p>
            Copyrights &copy; 2025
            <a href="http://www.elak.hr/">ELAK d.o.o. KASTAV</a>
          </p>
          <p>
            Frlani 10, HR51215 KASTAV, Hrvatska, Tel: +385 51 320 350,
            elak@elak.hr
          </p>
        </div>
      </div>
    </div>

    <script src="/bootstrap/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
<script language="javascript">
  var yearList = []; // Glavne varijable za spremanje vremena zvonjenja
  var weekList = []; // Glavne varijable za spremanje vremena zvonjenja
  var otkaziSlanje = false;

  var sviDaniCheck = document.getElementById("sviDani");
  sviDaniCheck.addEventListener("click", function () {
    if (sviDaniCheck.checked) {
      document.getElementById("pon").checked = true;
      document.getElementById("uto").checked = true;
      document.getElementById("sri").checked = true;
      document.getElementById("cet").checked = true;
      document.getElementById("pet").checked = true;
      document.getElementById("sub").checked = true;
      document.getElementById("ned").checked = true;

      document.getElementById("pon").disabled = true;
      document.getElementById("uto").disabled = true;
      document.getElementById("sri").disabled = true;
      document.getElementById("cet").disabled = true;
      document.getElementById("pet").disabled = true;
      document.getElementById("sub").disabled = true;
      document.getElementById("ned").disabled = true;
    } else {
      document.getElementById("pon").checked = false;
      document.getElementById("uto").checked = false;
      document.getElementById("sri").checked = false;
      document.getElementById("cet").checked = false;
      document.getElementById("pet").checked = false;
      document.getElementById("sub").checked = false;
      document.getElementById("ned").checked = false;

      document.getElementById("pon").disabled = false;
      document.getElementById("uto").disabled = false;
      document.getElementById("sri").disabled = false;
      document.getElementById("cet").disabled = false;
      document.getElementById("pet").disabled = false;
      document.getElementById("sub").disabled = false;
      document.getElementById("ned").disabled = false;
    }
  });

  document.getElementById("vrijemeSati").addEventListener("input", function () {
    var vrijeme = document.getElementById("vrijemeUklopa").value;
    var [sati, minute] = vrijeme.split(":");
    if (this.value.length == 1) {
      sati = "0" + this.value;
    } else {
      sati = this.value;
    }
    document.getElementById("vrijemeUklopa").value = sati + ":" + minute;
  });

  document
    .getElementById("vrijemeUklopa")
    .addEventListener("input", function () {
      var vrijeme = document.getElementById("vrijemeSati").value;
      var [sati, minute] = this.value.split(":");
      document.getElementById("vrijemeSati").value = sati;
      document.getElementById("vrijemeMinute").value = minute;
    });

  document
    .getElementById("vrijemeMinute")
    .addEventListener("input", function () {
      var vrijeme = document.getElementById("vrijemeUklopa").value;
      var [sati, minute] = vrijeme.split(":");
      if (this.value.length == 1) {
        minute = "0" + this.value;
      } else {
        minute = this.value;
      }
      document.getElementById("vrijemeUklopa").value = sati + ":" + minute;
    });

  document.getElementById("sliderUklop").addEventListener("input", function () {
    if (this.value == 0) {
      //document.getElementById("trajanjeUklopa").value = "Off";
      document.getElementById("offOn").textContent = "OFF";
      document.getElementById("offOn").classList.remove("bg-success");
      document.getElementById("offOn").classList.add("bg-danger");
    } else if (this.value == 100) {
      //document.getElementById("trajanjeUklopa").value = "On";
      document.getElementById("offOn").textContent = "ON";
      document.getElementById("offOn").classList.remove("bg-danger");
      document.getElementById("offOn").classList.add("bg-success");
    } else {
      document.getElementById("offOn").textContent = "   ";
      document.getElementById("offOn").classList.remove("bg-danger");
      document.getElementById("offOn").classList.add("bg-success");
    }
    document.getElementById("trajanjeUklopa").value = this.value;
  });
  document
    .getElementById("trajanjeUklopa")
    .addEventListener("input", function () {
      if (this.value == 0) {
        document.getElementById("offOn").textContent = "OFF";
        document.getElementById("offOn").classList.remove("bg-success");
        document.getElementById("offOn").classList.add("bg-danger");
      } else if (this.value == 100) {
        document.getElementById("offOn").textContent = "ON";
        document.getElementById("offOn").classList.remove("bg-danger");
        document.getElementById("offOn").classList.add("bg-success");
      } else {
        document.getElementById("offOn").textContent = "   ";
        document.getElementById("offOn").classList.remove("bg-danger");
        document.getElementById("offOn").classList.add("bg-success");
      }
      document.getElementById("sliderUklop").value = this.value;
    });

  function dodajVremenskuListu(
    dataGroup,
    vrijemePodatak,
    dani,
    trajanjeImpulsa
  ) {
    var novaVremenskaLista = document.createElement("div");
    novaVremenskaLista.className = "memorija row align-items-center mb-2";
    novaVremenskaLista.setAttribute("data-group", dataGroup);

    var vrijeme = document.createElement("span");
    vrijeme.textContent = vrijemePodatak;
    vrijeme.className = "col-1";

    var danUtjednu = document.createElement("span");
    danUtjednu.textContent = dani;
    danUtjednu.className = "col-6  ms-3";

    var trajanje = document.createElement("span");
    trajanje.textContent = trajanjeImpulsa;
    trajanje.className = "col-1 col-md-2 ms-2 me-2 me-md-4";

    //var buttonContainer = document.createElement("div");
    //buttonContainer.className = "col-2 text-center d-flex justify-content-end";

    var buttonP = document.createElement("button");
    buttonP.textContent = "M";
    buttonP.className = "btn btn-sm col-1 text-center btn-primary";
    buttonP.style.padding = "2px";
    buttonP.style.width = "28px";

    buttonP.onclick = function () {
      var spanNode = this.parentNode;
      var time = spanNode.childNodes[0].textContent;
      var weekDay = spanNode.childNodes[1].textContent;
      var impulseTimeChange = spanNode.childNodes[2].textContent;
      document.getElementById("vrijemeUklopa").value = time;

      var [sati, minute] = time.split(":");
      document.getElementById("vrijemeSati").value = sati;
      document.getElementById("vrijemeMinute").value = minute;
      if (impulseTimeChange == "Off") {
        document.getElementById("offOn").textContent = "OFF";
        document.getElementById("offOn").classList.remove("bg-success");
        document.getElementById("offOn").classList.add("bg-danger");
        document.getElementById("trajanjeUklopa").value = "0";
        document.getElementById("sliderUklop").value = "0";
      } else if (impulseTimeChange == "On") {
        document.getElementById("offOn").textContent = "ON";
        document.getElementById("offOn").classList.remove("bg-danger");
        document.getElementById("offOn").classList.add("bg-success");
        document.getElementById("trajanjeUklopa").value = "100";
        document.getElementById("sliderUklop").value = "100";
      } else {
        document.getElementById("offOn").textContent = "   ";
        document.getElementById("offOn").classList.remove("bg-danger");
        document.getElementById("offOn").classList.add("bg-success");
        document.getElementById("trajanjeUklopa").value = impulseTimeChange;
        document.getElementById("sliderUklop").value = impulseTimeChange;
      }
      weekDay = weekDay.split(" ");

      // Reset all checkboxes
      ["pon", "uto", "sri", "cet", "pet", "sub", "ned", "sviDani"].forEach(
        (id) => {
          document.getElementById(id).checked = false;
          document.getElementById(id).disabled = false;
        }
      );

      // Update specific checkboxes based on the weekDay array
      const daysMapping = {
        M: "pon",
        Tu: "uto",
        W: "sri",
        Th: "cet",
        F: "pet",
        Sa: "sub",
        Su: "ned",
      };
      weekDay.forEach((day) => {
        if (daysMapping[day])
          document.getElementById(daysMapping[day]).checked = true;
      });

      if (
        Object.values(daysMapping).every(
          (id) => document.getElementById(id).checked
        )
      ) {
        Object.values(daysMapping).forEach(
          (id) => (document.getElementById(id).disabled = true)
        );
        document.getElementById("sviDani").checked = true;
      }

      var programDelete = this.parentNode.getAttribute("data-group");
      time = time.split(":");

      let timeDeleteHoursStr = time[0].startsWith("0") ? time[0][1] : time[0];
      let timeDeleteMinutesStr = time[1].startsWith("0") ? time[1][1] : time[1];

      weekList = weekList.filter(
        (item) =>
          !(
            item[0] === programDelete &&
            item[1] === timeDeleteHoursStr &&
            item[2] === timeDeleteMinutesStr
          )
      );

      spanNode.remove();
    };

    var buttonX = document.createElement("button");
    buttonX.textContent = "X";
    buttonX.className = "btn btn-sm col-1 btn-danger";
    buttonX.style.width = "25px";
    buttonX.style.padding = "2px";

    buttonX.onclick = function () {
      var timeDelete = this.parentNode.childNodes[0].textContent;
      var programDelete = this.parentNode.getAttribute("data-group");
      timeDelete = timeDelete.split(":");

      let timeDeleteHoursStr = timeDelete[0].startsWith("0")
        ? timeDelete[0][1]
        : timeDelete[0];
      let timeDeleteMinutesStr = timeDelete[1].startsWith("0")
        ? timeDelete[1][1]
        : timeDelete[1];

      weekList = weekList.filter(
        (item) =>
          !(
            item[0] === programDelete &&
            item[1] === timeDeleteHoursStr &&
            item[2] === timeDeleteMinutesStr
          )
      );

      this.parentNode.remove();
    };

    //buttonContainer.appendChild(buttonP);
    //buttonContainer.appendChild(buttonX);

    novaVremenskaLista.appendChild(vrijeme);
    novaVremenskaLista.appendChild(danUtjednu);
    novaVremenskaLista.appendChild(trajanje);
    novaVremenskaLista.appendChild(buttonP);
    novaVremenskaLista.appendChild(buttonX);

    document.getElementById("vremenskaLista").appendChild(novaVremenskaLista);
  }

  var vrijednostTjedna = 0;
  document
    .getElementById("dodajVremListu")
    .addEventListener("click", function () {
      var daniTjedan = "";
      vrijednostTjedna = 0;

      if (document.getElementById("pon").checked) {
        daniTjedan += "M ";
        vrijednostTjedna += 64;
      } else {
        daniTjedan += "- ";
      }

      if (document.getElementById("uto").checked) {
        daniTjedan += "Tu ";
        vrijednostTjedna += 32;
      } else {
        daniTjedan += "- ";
      }

      if (document.getElementById("sri").checked) {
        daniTjedan += "W ";
        vrijednostTjedna += 16;
      } else {
        daniTjedan += "- ";
      }

      if (document.getElementById("cet").checked) {
        daniTjedan += "Th ";
        vrijednostTjedna += 8;
      } else {
        daniTjedan += "- ";
      }

      if (document.getElementById("pet").checked) {
        daniTjedan += "F ";
        vrijednostTjedna += 4;
      } else {
        daniTjedan += "- ";
      }

      if (document.getElementById("sub").checked) {
        daniTjedan += "Sa ";
        vrijednostTjedna += 2;
      } else {
        daniTjedan += "- ";
      }

      if (document.getElementById("ned").checked) {
        daniTjedan += "Su";
        vrijednostTjedna += 1;
      } else {
        daniTjedan += "-";
      }

      const input = document.getElementById("trajanjeUklopa");
      const min = parseFloat(input.min);
      const max = parseFloat(input.max);
      const value = parseFloat(input.value);
      if (
        !document.getElementById("pon").checked &&
        !document.getElementById("uto").checked &&
        !document.getElementById("sri").checked &&
        !document.getElementById("cet").checked &&
        !document.getElementById("pet").checked &&
        !document.getElementById("sub").checked &&
        !document.getElementById("ned").checked
      ) {
        alert("Please choose atleast one day of the week!");
      } else if (value < min || value > max || isNaN(value)) {
        alert("Ring duration invalid, please enter value between 0 and 100!");
        document.getElementById("trajanjeUklopa").value = 1;
        document.getElementById("sliderUklop").value = 1;
      } else {
        appendToWeeklist(
          document.getElementById("tjedniProgramSelect").value,
          document.getElementById("vrijemeUklopa").value,
          daniTjedan,
          vrijednostTjedna,
          document.getElementById("trajanjeUklopa").value
        );
      }
    });

  var removedPrograms = [];

  document.getElementById("buttUp").addEventListener("click", function () {
    buttonUp();
  });
  function buttonUp() {
    document.getElementById("buttDown").disabled = false;
    document.getElementById("dodajVremListu").disabled = false;
    document.getElementById("dodajGodListu").disabled = false;

    if (document.getElementById("tjedniProgramSelect").length < 100) {
      var option = document.createElement("option");
      if (removedPrograms.length != 0) {
        option.value = removedPrograms[0];
        option.text = "P" + removedPrograms[0];
        removedPrograms.shift();
      } else {
        option.value = document.getElementById("tjedniProgramSelect").length;
        option.text =
          "P" + document.getElementById("tjedniProgramSelect").length;
      }
      document.getElementById("tjedniProgramSelect").add(option);
      sortOptionsWithDigits("tjedniProgramSelect");
      option.selected = true;
    }
    copyOptions("tjedniProgramSelect", "programGodisnja");
    prikazVremenaPrograma();
  }

  document.getElementById("buttDown").addEventListener("click", function () {
    var selectedProgramToDelete = document.getElementById(
      "tjedniProgramSelect"
    ).value;
    for (var i = weekList.length - 1; i >= 0; i--) {
      if (weekList[i][0] == selectedProgramToDelete) {
        weekList.splice(i, 1);
      }
    }

    for (var j = yearList.length - 1; j >= 0; j--) {
      if (yearList[j][4] == selectedProgramToDelete) {
        yearList.splice(j, 1);
      }
      prikazGodisnjegPrograma();
    }

    if (document.getElementById("tjedniProgramSelect").length != 0) {
      var selectedIndex = document.getElementById(
        "tjedniProgramSelect"
      ).selectedIndex;
      removedPrograms.push(
        document.getElementById("tjedniProgramSelect").options[selectedIndex]
          .value
      );
      removedPrograms.sort(function (a, b) {
        return a - b;
      });
      document
        .getElementById("tjedniProgramSelect")
        .options.remove(selectedIndex);
    }
    if (document.getElementById("tjedniProgramSelect").length == 0) {
      document.getElementById("buttDown").disabled = true;
      document.getElementById("dodajVremListu").disabled = true;
      document.getElementById("dodajGodListu").disabled = true;
    }
    copyOptions("tjedniProgramSelect", "programGodisnja");
    prikazVremenaPrograma();
  });

  window.onload = function () {
    activeTab();
    document.getElementById("buttDown").disabled = true;
    document.getElementById("dodajVremListu").disabled = true;
    document.getElementById("dodajGodListu").disabled = true;
  };

  document
    .getElementById("dodajGodListu")
    .addEventListener("click", function () {
      var datum = document.getElementById("dateChoosen").value;
      datum = datum.split("-");
      var program = document.getElementById("programGodisnja").value;
      var relej = document.getElementById("releji").value;

      if (document.getElementById("dateChoosen").value == "") {
        alert("Enter a valid date!");
      } else {
        appendToYearList();
        yearList.sort(customSortYear);
        prikazGodisnjegPrograma();
      }
      console.log(yearList);
    });

  function prikazGodisnjegPrograma() {
    var selectedProgram = document.getElementById("releji").value;
    document.getElementById("godiListaPrikaz").innerHTML = "";
    for (var i = 0; i < yearList.length; i++) {
      if (selectedProgram == yearList[i][0]) {
        dodajGodisnjuListu(
          formatRelej(yearList[i][0]),
          "P" + yearList[i][4],
          formatDay(yearList[i][3]) +
            "." +
            formatMonth(yearList[i][2]) +
            "." +
            "20" +
            yearList[i][1] +
            "."
        );
      }
      if (selectedProgram == "0") {
        dodajGodisnjuListu(
          formatRelej(yearList[i][0]),
          "P" + yearList[i][4],
          formatDay(yearList[i][3]) +
            "." +
            formatMonth(yearList[i][2]) +
            "." +
            "20" +
            yearList[i][1] +
            "."
        );
      }
    }
  }

  document.getElementById("releji").addEventListener("change", function () {
    prikazGodisnjegPrograma();
  });

  function formatRelej(week) {
    if (week == "241") {
      return "R1";
    } else if (week == "242") {
      return "R2";
    } else if (week == "243") {
      return "R3";
    } else if (week == "244") {
      return "R4";
    } else if (week == "245") {
      return "R5";
    } else {
      return "R6";
    }
  }
  function formatDay(day) {
    if (day.length == 1) {
      return "0" + day;
    } else {
      return day;
    }
  }
  function formatMonth(month) {
    if (month.length == 1) {
      return "0" + month;
    } else {
      return month;
    }
  }

  function appendToYearList() {
    var godisnjaListaProgram = [];
    var relej = document.getElementById("releji").value;
    var sameyearProgram = false;

    godisnjaListaProgram.push(relej);

    var datum = document.getElementById("dateChoosen").value;
    datum = datum.split("-");
    var godina = datum[0].split("");
    godisnjaListaProgram.push(godina[2] + godina[3]);

    var mjesec = datum[1].split("");
    if (mjesec[0] == "0") {
      godisnjaListaProgram.push(mjesec[1]);
    } else {
      godisnjaListaProgram.push(mjesec[0] + mjesec[1]);
    }

    var dan = datum[2].split("");
    if (dan[0] == "0") {
      godisnjaListaProgram.push(dan[1]);
    } else {
      godisnjaListaProgram.push(dan[0] + dan[1]);
    }
    var program = document.getElementById("programGodisnja").value;
    godisnjaListaProgram.push(program);

    var brojPrograma = 0;
    for (var i = 0; i < weekList.length; i++) {
      if (weekList[i][0] == program) {
        brojPrograma = brojPrograma + 1;
      }
    }
    if (brojPrograma == 0) {
      alert("Program is empty");
    } else {
      if (relej == 0) {
        for (var j = 1; j <= 6; j++) {
          sameyearProgram = false;
          godisnjaListaProgram.splice(0, 1);
          godisnjaListaProgram.unshift("24" + j);

          for (var i = 0; i < yearList.length; i++) {
            if (yearList[i][0] == godisnjaListaProgram[0]) {
              if (yearList[i][1] == godisnjaListaProgram[1]) {
                if (yearList[i][2] == godisnjaListaProgram[2]) {
                  if (yearList[i][3] == godisnjaListaProgram[3]) {
                    if (yearList[i][4] == godisnjaListaProgram[4]) {
                      if (yearList[i][5] == godisnjaListaProgram[5]) {
                        sameyearProgram = true;
                      }
                    }
                  }
                }
              }
            }
          }
          if (sameyearProgram == true) {
            alert("Date allready exists!");
          } else {
            yearList.push([...godisnjaListaProgram]);
          }
        }
      } else {
        for (var i = 0; i < yearList.length; i++) {
          if (yearList[i][0] == godisnjaListaProgram[0]) {
            if (yearList[i][1] == godisnjaListaProgram[1]) {
              if (yearList[i][2] == godisnjaListaProgram[2]) {
                if (yearList[i][3] == godisnjaListaProgram[3]) {
                  if (yearList[i][4] == godisnjaListaProgram[4]) {
                    if (yearList[i][5] == godisnjaListaProgram[5]) {
                      if (yearList[i][6] == godisnjaListaProgram[6]) {
                        sameyearProgram = true;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (sameyearProgram == true) {
          alert("Program allready exists!");
        } else {
          yearList.push(godisnjaListaProgram);
        }
      }
    }
    popunjenostMemorije();
  }

  function dodajGodisnjuListu(dataGroup, programNum, datumNum) {
    var novaGodisnjaLista = document.createElement("div");
    novaGodisnjaLista.className = "memorija row align-items-center mb-2";
    novaGodisnjaLista.setAttribute("data-group", dataGroup);

    var relej = document.createElement("span");
    relej.textContent = dataGroup;
    //relej.style.marginRight = "60px";
    relej.className = "col-2";

    var datum = document.createElement("span");
    datum.textContent = datumNum;
    //datum.style.marginRight = "70px";
    datum.className = "col-4 ms-2 me-2";

    var program = document.createElement("span");
    program.textContent = programNum;
    //program.style.marginRight = "20px";
    //program.style.display = "inline-block";
    //program.style.width = "30px";
    program.className = "col-2";

    var buttonP = document.createElement("button");
    buttonP.textContent = "M";
    buttonP.className = "btn btn-sm col-1 ms-3 ms-md-4 text-center btn-primary";
    buttonP.style.padding = "2px";
    buttonP.style.width = "28px";

    buttonP.onclick = function () {
      var relej = this.parentNode.childNodes[0].textContent;
      relej = relej.split("");
      document.getElementById("releji").selectedIndex = relej[1];

      var datum = this.parentNode.childNodes[1].textContent;
      datum = datum.split(".");
      datum.splice(-1, 1);

      var dan = datum[0].split("");

      if (dan[0] == "0") {
        danStr = dan[1];
      } else {
        danStr = dan[0] + dan[1];
      }

      var mjesec = datum[1].split("");

      if (mjesec[0] == "0") {
        mjesecStr = mjesec[1];
      } else {
        mjesecStr = mjesec[0] + mjesec[1];
      }

      var godina = datum[2].split("");
      godinaStr = godina[2] + godina[3];

      document.getElementById("dateChoosen").value =
        "20" + godinaStr + "-" + mjesec[0] + mjesec[1] + "-" + dan[0] + dan[1];

      var program = this.parentNode.childNodes[2].textContent;
      program = program.split("");

      if (program.length == 3) {
        programStr = program[1] + program[2];
      } else {
        programStr = program[1];
      }

      document.getElementById("programGodisnja").selectedIndex = programStr;

      for (var i = 0; i < yearList.length; i++) {
        if (yearList[i][0] == "24" + relej[1]) {
          if (yearList[i][1] == godinaStr) {
            if (yearList[i][2] == mjesecStr) {
              if (yearList[i][3] == danStr) {
                if ((yearList[i][4] = programStr)) {
                  yearList.splice(i, 1);
                }
              }
            }
          }
        }
      }

      this.parentNode.remove();
    };

    var buttonX = document.createElement("button");
    buttonX.textContent = "X";
    buttonX.className = "btn btn-sm col-1 btn-danger";
    buttonX.style.width = "25px";
    buttonX.style.padding = "2px";

    buttonX.onclick = function () {
      var relej = this.parentNode.childNodes[0].textContent;
      relej = relej.split("");

      var datum = this.parentNode.childNodes[1].textContent;
      datum = datum.split(".");
      datum.splice(-1, 1);

      var dan = datum[0].split("");

      if (dan[0] == "0") {
        danStr = dan[1];
      } else {
        danStr = dan[0] + dan[1];
      }

      var mjesec = datum[1].split("");

      if (mjesec[0] == "0") {
        mjesecStr = mjesec[1];
      } else {
        mjesecStr = mjesec[0] + mjesec[1];
      }

      var godina = datum[2].split("");
      godinaStr = godina[2] + godina[3];

      var program = this.parentNode.childNodes[2].textContent;
      program = program.split("");

      if (program.length == 3) {
        programStr = program[1] + program[2];
      } else {
        programStr = program[1];
      }

      for (var i = 0; i < yearList.length; i++) {
        if (yearList[i][0] == "24" + relej[1]) {
          if (yearList[i][1] == godinaStr) {
            if (yearList[i][2] == mjesecStr) {
              if (yearList[i][3] == danStr) {
                if ((yearList[i][4] = programStr)) {
                  yearList.splice(i, 1);
                }
              }
            }
          }
        }
      }

      this.parentNode.remove();
    };

    novaGodisnjaLista.appendChild(relej);
    novaGodisnjaLista.appendChild(datum);
    novaGodisnjaLista.appendChild(program);
    novaGodisnjaLista.appendChild(buttonP);
    novaGodisnjaLista.appendChild(buttonX);

    document.getElementById("godiListaPrikaz").appendChild(novaGodisnjaLista);
  }

  function sortOptionsWithDigits(id) {
    // Get the select element
    var select = document.getElementById(id);

    // Get the options and convert to an array
    var optionsArray = Array.from(select.options);

    // Sort the options based on their numeric values
    optionsArray.sort(function (a, b) {
      // Extract numeric values from the strings using regular expressions
      var aValue = parseInt(a.value.match(/\d+/)[0], 10);
      var bValue = parseInt(b.value.match(/\d+/)[0], 10);

      return aValue - bValue;
    });

    // Remove existing options from the select element
    for (var i = select.options.length - 1; i >= 0; i--) {
      select.remove(i);
    }

    // Add the sorted options back to the select element
    optionsArray.forEach(function (option) {
      select.add(option);
    });
  }

  function copyOptions(sourceSelectId, targetSelectId) {
    // Get the source and target select elements
    var sourceSelect = document.getElementById(sourceSelectId);
    var targetSelect = document.getElementById(targetSelectId);
    while (targetSelect.options.length > 0) {
      targetSelect.remove(0);
    }
    // Loop through each option in the source select
    for (var i = 0; i < sourceSelect.options.length; i++) {
      // Clone the option from the source select
      var optionClone = sourceSelect.options[i].cloneNode(true);

      // Add the cloned option to the target select
      targetSelect.add(optionClone);
    }
  }
  function appendToWeeklist(
    programNumber,
    timeOfDay,
    daniTjedan,
    vrijednostTjedna,
    impulseTime
  ) {
    var programLine = [];
    programLine.push(programNumber);
    var timeOfDaySplit = timeOfDay.split(":");
    hoursTime = timeOfDaySplit[0].split("");
    minutesTime = timeOfDaySplit[1].split("");
    if (hoursTime[0] == "0") {
      programLine.push(hoursTime[1]);
    } else {
      programLine.push(hoursTime[0] + hoursTime[1]);
    }
    if (minutesTime[0] == "0") {
      programLine.push(minutesTime[1]);
    } else {
      programLine.push(minutesTime[0] + minutesTime[1]);
    }
    programLine.push(vrijednostTjedna.toString());
    if (impulseTime == "Off") {
      programLine.push("0");
    } else if (impulseTime == "On") {
      programLine.push("100");
    } else {
      programLine.push(impulseTime);
    }
    checkForTime(programLine);
    console.log(weekList);
  }
  function checkForTime(programLine) {
    var sameTime = false;
    for (var i = 0; i < weekList.length; i++) {
      if (weekList[i][1] == programLine[1]) {
        if (weekList[i][2] == programLine[2]) {
          if (weekList[i][0] == programLine[0]) sameTime = true;
        }
      }
    }
    if (sameTime == false) {
      weekList.push(programLine);
      //dodajVremenskuListu(programNumber, timeOfDay, daniTjedan, impulseTime);
      prikazVremenaPrograma();
    } else {
      alert("Time allready exists!");
    }
  }
  document
    .getElementById("tjedniProgramSelect")
    .addEventListener("change", function () {
      prikazVremenaPrograma();
    });
  function prikazVremenaPrograma() {
    var selectedProgram = document.getElementById("tjedniProgramSelect").value;
    document.getElementById("vremenskaLista").innerHTML = "";
    for (var i = 0; i < weekList.length; i++) {
      if (selectedProgram == weekList[i][0]) {
        weekList.sort(customSort);
        dodajVremenskuListu(
          weekList[i][0],
          formatTime(weekList[i][1], weekList[i][2]),
          formatWeek(weekList[i][3]),
          formatImpulse(weekList[i][4])
        );
      }
    }
    popunjenostMemorije();
  }
  function formatTime(hours, minutes) {
    if (hours.length == 1) {
      hours = "0" + hours;
    }
    if (minutes.length == 1) {
      minutes = "0" + minutes;
    }
    return hours + ":" + minutes;
  }
  function formatWeek(weekNumber) {
    var weekString = "";

    if ((weekNumber & 64) == 64) {
      weekString += "M ";
    } else {
      weekString += "- ";
    }
    if ((weekNumber & 32) == 32) {
      weekString += "Tu ";
    } else {
      weekString += "- ";
    }
    if ((weekNumber & 16) == 16) {
      weekString += "W ";
    } else {
      weekString += "- ";
    }
    if ((weekNumber & 8) == 8) {
      weekString += "Th ";
    } else {
      weekString += "- ";
    }
    if ((weekNumber & 4) == 4) {
      weekString += "F ";
    } else {
      weekString += "- ";
    }
    if ((weekNumber & 2) == 2) {
      weekString += "Sa ";
    } else {
      weekString += "- ";
    }
    if ((weekNumber & 1) == 1) {
      weekString += "Su";
    } else {
      weekString += "-";
    }
    return weekString;
  }
  function formatImpulse(impulseNumber) {
    var impulseStr = "";
    if (impulseNumber == 0) {
      impulseStr = "Off";
    } else if (impulseNumber == 100) {
      impulseStr = "On";
    } else {
      impulseStr = impulseNumber;
    }
    return impulseStr;
  }
  function customSort(a, b) {
    if (a[0] !== b[0]) {
      return a[0] - b[0];
    }
    if (a[1] !== b[1]) {
      return a[1] - b[1];
    }
    if (a[2] !== b[2]) {
      return a[2] - b[2];
    }
    return 0;
  }

  function customSortYear(a, b) {
    if (a[0] !== b[0]) {
      return a[0] - b[0];
    }
    if (a[1] !== b[1]) {
      return a[1] - b[1];
    }
    if (a[2] !== b[2]) {
      return a[2] - b[2];
    }
    if (a[3] !== b[3]) {
      return a[3] - b[3];
    }
    return 0;
  }

  document.getElementById("brisiSve").addEventListener("click", function () {
    location.reload();
    document.getElementById("tekstProgram").value = "";
  });

  var zeroNum = 0;
  var dataTekstSplit = [];

  document.getElementById("SpremiEMC").addEventListener("click", function () {
    formatTekstualniProgram();

    dataTekst = document.getElementById("tekstProgram").value;
    dataTekstSplit = dataTekst.split("\n");
    zeroNum = 0;
    dataTekstSplit.pop();
    console.log(dataTekstSplit);
    dataTekstSplit.unshift("E0");
    dataTekstSplit.push("F1");
    dataTekstSplit.push("E1");
    index = 0;

    console.log(dataTekstSplit);
    otkaziSlanje = false;
    postDataSequentially(index);
  });

  function postDataSequentially(index) {
    if (index < dataTekstSplit.length && otkaziSlanje == false) {
      dataTekstSplit[index] = dataTekstSplit[index].replace(/\s/g, "");
      dataCheck = dataTekstSplit[index].split(",");
      //console.log(dataCheck);
      if (
        dataCheck[1] == "0" &&
        dataCheck[2] == "0" &&
        dataCheck[3] == "0" &&
        dataCheck[4] == "0" &&
        dataCheck[5] == "0"
      ) {
        zeroNum++;
      }
      if (zeroNum == 0) {
        message = "" + dataTekstSplit[index];
      } else if (zeroNum == 1) {
        message = "P" + dataTekstSplit[index];
        zeroNum++;
      } else if (zeroNum == 2) {
        message = "R" + dataTekstSplit[index];
      } else if (zeroNum == 3) {
        message = "P" + dataTekstSplit[index];
      } else if (zeroNum == 4) {
        message = "P" + dataTekstSplit[index];
        zeroNum++;
      } else if (zeroNum == 5) {
        message = "" + dataTekstSplit[index];
      }
      const endpoint = `/admin/li.cgi?l=${message}`;
      console.log(endpoint);

      fetch(endpoint, {
        method: "POST",
      })
        .then((response) => {
          response.text();
        })
        .then((data) => {
          console.log("Data received:", data);
          index++;
          ucitavanjeSEMCa(index, false, dataTekstSplit.length);
          postDataSequentially(index);
        })
        .catch((error) => {
          console.error("Error during fetch:", error);
        });
    } else {
      ucitavanjeSEMCa(index, true, dataTekstSplit.length);
    }
  }

  function formatTekstualniProgram() {
    var podaciGodisnjaLista = "0,0,0,0,0,0\n";
    document.getElementById("tekstProgram").value = podaciGodisnjaLista;
    for (var i = 0; i < yearList.length; i++) {
      podaciGodisnjaLista =
        i +
        1 +
        "," +
        yearList[i][0] +
        "," +
        yearList[i][1] +
        "," +
        yearList[i][2] +
        "," +
        yearList[i][3] +
        "," +
        yearList[i][4] +
        "\n";
      document.getElementById("tekstProgram").value += podaciGodisnjaLista;
    }

    podaciGodisnjaLista = yearList.length + 1 + ",0,0,0,0,0\n";
    document.getElementById("tekstProgram").value += podaciGodisnjaLista;

    var trenutniRed = yearList.length + 2;
    for (var i = 0; i < weekList.length; i++) {
      podaciGodisnjaLista =
        trenutniRed +
        i +
        "," +
        weekList[i][0] +
        "," +
        weekList[i][1] +
        "," +
        weekList[i][2] +
        "," +
        weekList[i][3] +
        "," +
        weekList[i][4] +
        "\n";
      document.getElementById("tekstProgram").value += podaciGodisnjaLista;
    }

    podaciGodisnjaLista = weekList.length + trenutniRed + ",0,0,0,0,0\n";
    document.getElementById("tekstProgram").value += podaciGodisnjaLista;
  }

  document
    .getElementById("ucitajIzTeksta")
    .addEventListener("click", function () {
      ucitavanje();
    });

  function ucitavanje() {
    removeAllOptions();
    if (document.getElementById("tekstProgram").value == "") {
      alert("Text program is empty!");
    } else {
      var tekst = document.getElementById("tekstProgram").value;
      tekst = tekst.split("\n");
      for (var i = 0; i < tekst.length; i++) {
        tekst[i] = tekst[i].replace(/\s/g, "");
        tekst[i] = tekst[i].split(",");
      }
      var broj = 0;
      if (
        tekst[0][0] != "0" ||
        tekst[0][1] != "0" ||
        tekst[0][2] != "0" ||
        tekst[0][3] != "0" ||
        tekst[0][4] != "0" ||
        tekst[0][5] != "0"
      ) {
        alert("Wrong entry!");
      } else {
        weekList = [];
        yearList = [];

        broj = broj + 1;
        for (var i = 1; i < tekst.length; i++) {
          if (
            tekst[i][0] == i &&
            tekst[i][1] == "0" &&
            tekst[i][2] == "0" &&
            tekst[i][3] == "0" &&
            tekst[i][4] == "0" &&
            tekst[i][5] == "0"
          ) {
            broj = broj + 1;
          } else if (broj == 1) {
            tekst[i].splice(0, 1);
            console.log(tekst[i]);
            if (tekst[i][1] == 0 && tekst[i][2] == 0 && tekst[i][3] == 0) {
              tekst[i][1] = "20";
              tekst[i][2] = "1";
              tekst[i][3] = "1";
            }
            // Ovdje dodaj da 0,0,0 datum se prebacuje u datum 01.01.2020.
            yearList.push(tekst[i]);
          } else if (broj == 2) {
            tekst[i].splice(0, 1);
            weekList.push(tekst[i]);
          }
        }
        yearList.sort(customSortYear);
        prikazGodisnjegPrograma();
        var programs = [];
        for (var i = 0; i < weekList.length; i++) {
          programs.push(weekList[i][0]);
        }
        var programs = [...new Set(programs)];
        createPrograms(programs);
        prikazVremenaPrograma();
      }
    }
  }

  function createPrograms(programs) {
    removedPrograms = programs.slice();
    for (var i = 0; i < programs.length; i++) {
      buttonUp();
    }
    programs = findMissingNumbers(programs.map(Number));
    removedPrograms = programs.map(String);
  }

  function findMissingNumbers(arr) {
    var min = Math.min(...arr);
    var max = Math.max(...arr);
    var missingNumbers = [];

    for (var i = min; i <= max; i++) {
      if (!arr.includes(i)) {
        missingNumbers.push(i);
      }
    }

    return missingNumbers;
  }
  function removeAllOptions() {
    var selectElement = document.getElementById("tjedniProgramSelect");
    var tjedniSelect = document.getElementById("programGodisnja");
    while (selectElement.options.length > 0) {
      selectElement.remove(0);
    }
    while (tjedniSelect.options.length > 0) {
      tjedniSelect.remove(0);
    }
  }
  function popunjenostMemorije() {
    var memorijaZbroj = weekList.length + yearList.length;

    if (Math.abs(memorijaZbroj).toString().length == 1) {
      memorijaZbrojStr = "00" + memorijaZbroj;
    } else if (Math.abs(memorijaZbroj).toString().length == 2) {
      memorijaZbrojStr = "0" + memorijaZbroj;
    } else {
      memorijaZbrojStr = memorijaZbroj;
    }
    document.getElementById("memorijaPop").innerHTML =
      "Memory: " + memorijaZbrojStr + "/800";
  }

  var breakCond = 0;
  var dataSplit = 0;
  document.getElementById("ucitajEMC").addEventListener("click", function () {
    var lineNum = 0;
    breakCond = 0;
    document.getElementById("tekstProgram").value = "";
    otkaziSlanje = false;
    while (lineNum < 800 && breakCond < 3 && otkaziSlanje == false) {
      fetchDataSynchronously(lineNum);
      if (
        dataSplit[1] == "0" &&
        dataSplit[2] == "0" &&
        dataSplit[3] == "0" &&
        dataSplit[4] == "0" &&
        dataSplit[5] == "0\n "
      ) {
        breakCond++;
      }
      lineNum++;
      ucitavanjeSEMCa(lineNum, false, "---");
      document.getElementById("tekstProgram").value += dataSplit;
    }
    ucitavanjeSEMCa(lineNum, true, lineNum);
    ucitavanje();
  });

  function fetchDataSynchronously(lineNum) {
    if (lineNum.toString().length == 1) {
      line = "00" + lineNum;
    } else if (lineNum.toString().length == 2) {
      line = "0" + lineNum;
    } else {
      line = lineNum.toString();
    }

    const endpoint = `/admin/li.cgi?l=L${line}`;

    const xhr = new XMLHttpRequest();
    // Configure the request
    xhr.open("GET", endpoint, false); // Set the third parameter to 'false' for synchronous

    try {
      // Send the request
      xhr.send();
      // Check if the response status is OK (200-299)
      if (xhr.status >= 200 && xhr.status < 300) {
        const data = xhr.responseText;
        //console.log(data);
        dataSplit = data.split(",");
        //console.log(dataSplit);
      } else {
        throw new Error("Network response was not ok");
      }
    } catch (error) {
      // Handle errors
      console.error("Error during synchronous request:", error);
    }
  }

  function ucitavanjeSEMCa(broj, status, ukupniBroj) {
    if (broj.toString().length == 1) {
      brojStr = "00" + broj;
    } else if (broj.toString().length == 2) {
      brojStr = "0" + broj;
    } else {
      brojStr = broj;
    }

    if (ukupniBroj == "---") {
      ukupniBrojStr = ukupniBroj;
    } else if (ukupniBroj.toString().length == 1) {
      ukupniBrojStr = "00" + ukupniBroj;
    } else if (ukupniBroj.toString().length == 2) {
      ukupniBrojStr = "0" + ukupniBroj;
    } else {
      ukupniBrojStr = ukupniBroj;
    }

    if (status == false) {
      document.getElementById("ucitavanje").innerHTML =
        "Loading: " + brojStr + " of " + ukupniBrojStr;
    } else {
      document.getElementById("ucitavanje").innerHTML =
        "Loading: " + brojStr + " of " + ukupniBrojStr + " OK";
    }
  }

  document.getElementById("otkaz").addEventListener("click", function () {
    otkaziSlanje = true;
  });
</script>
